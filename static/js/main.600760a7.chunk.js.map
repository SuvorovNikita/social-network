{"version":3,"sources":["components/Nav/Nav.module.scss","components/Dialogs/Dialogs.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","App.module.scss","components/Header/Header.module.scss","assets/img/logo.png","components/Nav/Nav.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Header/Header.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","Redux/state.tsx","Render.tsx","index.tsx"],"names":["module","exports","Nav","className","classes","nav","item","activeClassName","active","to","Post","props","avatar","src","alt","message","likeCount","MyPosts","postsElements","posts","map","p","key","id","newPostElement","React","createRef","newPost","wrapperText","ref","value","newPostText","onChange","text","current","updateNewPostText","wrapperBtn","onClick","addPost","ProfileInfo","bgImage","discriptionBlock","Profile","bg","Header","header","logo","DialogItem","path","dialog","link","name","Message","Dialogs","dialogsElements","dialogs","d","messagesElements","messages","m","dialogsItem","News","Music","Settings","App","appWrapper","appWrapperContent","render","state","dialogsPage","profilePage","component","push","rerenderEntireTree","newText","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.600760a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__282eS\",\"item\":\"Nav_item__1Wb4D\",\"active\":\"Nav_active__2WM7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2VTAf\",\"dialog\":\"Dialogs_dialog__1itnl\",\"link\":\"Dialogs_link__2k7ga\",\"active\":\"Dialogs_active__W54GM\",\"messages\":\"Dialogs_messages__2auYW\",\"message\":\"Dialogs_message__2gIgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"MyPosts_newPost__1W9ww\",\"wrapperText\":\"MyPosts_wrapperText__PR3sl\",\"wrapperBtn\":\"MyPosts_wrapperBtn__fcMhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__4Tvim\",\"avatar\":\"Post_avatar__AfDLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__EFpt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__4kq__\",\"appWrapperContent\":\"App_appWrapperContent__2Mmga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3pUoX\"};","module.exports = __webpack_public_path__ + \"static/media/logo.e6d9ba36.png\";","import React from \"react\";\r\n\r\nimport classes from \"./Nav.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Nav = () => {\r\n    return <nav className={classes.nav}>\r\n        <NavLink className={classes.item} activeClassName={classes.active} to=\"/profile\">Profile</NavLink>\r\n        <NavLink className={classes.item} activeClassName={classes.active} to=\"/dialogs\">Messages</NavLink>\r\n        <NavLink className={classes.item} activeClassName={classes.active} to=\"/news\"> News</NavLink>\r\n        <NavLink className={classes.item} activeClassName={classes.active} to=\"/music\"> Music</NavLink>\r\n        <NavLink className={classes.item} activeClassName={classes.active} to=\"settings\">Settings</NavLink>\r\n    </nav>\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\n\r\nimport classes from \"./Post.module.scss\";\r\n\r\ntype PostDataType = {\r\n    // id:number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nconst Post = (props: PostDataType) => {\r\n    return <div className={classes.item}>\r\n        <img className={classes.avatar}\r\n             src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQPmeVA7-9PgEZEKzr2bK6y-2fcHFfUbP_liQ&usqp=CAU\"\r\n             alt=\"\"/>\r\n        {props.message}\r\n        <div>Like {props.likeCount}</div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\n\r\nimport classes from \"./MyPosts.module.scss\";\r\nimport {PostsType} from \"../../../Redux/state\";\r\n\r\n\r\ntype PropsType = {\r\n    posts: Array<PostsType>\r\n    addPost: () => void\r\n    updateNewPostText: (newText: any) => void\r\n    newPostText: any\r\n}\r\n\r\n\r\nconst MyPosts = (props: PropsType) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount}/>);\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current && newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    let addPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    return <div>\r\n        <h3 className={classes.newPost}>New posts</h3>\r\n        <div className={classes.wrapperText}>\r\n            <textarea ref={newPostElement} value={props.newPostText} onChange={onPostChange}/>\r\n        </div>\r\n        <div className={classes.wrapperBtn}>\r\n            <button onClick={addPost}>Add Post</button>\r\n        </div>\r\n        <div className={classes.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\n\r\nimport classes from \"./ProfileInfo.module.scss\";\r\n\r\nconst ProfileInfo = () => {\r\n    return <div>\r\n        <img className={classes.bgImage}\r\n             src=\"https://pm1.narvii.com/6911/d76ea35645ae06a9fe61855ed6bfa59ee5d07b45r4-736-368_00.jpg\" alt=\"\"/>\r\n        <div className={classes.discriptionBlock}>\r\n            ava + description\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\n\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nimport classes from \"./Profile.module.scss\";\r\nimport {PostsType} from \"../../Redux/state\";\r\n\r\n\r\ntype PropsType = {\r\n    posts: Array<PostsType>\r\n    addPost: () => void\r\n    updateNewPostText: (newText: any) => void\r\n    newPostText: any\r\n}\r\n\r\nconst Profile = (props: PropsType) => {\r\n    return <div className={classes.bg}>\r\n        <ProfileInfo/>\r\n        <MyPosts posts={props.posts}\r\n                 updateNewPostText={props.updateNewPostText}\r\n                 newPostText={props.newPostText}\r\n                 addPost={props.addPost}/>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\n\r\nimport classes from \"./Header.module.scss\";\r\nimport logo from \"./../../assets/img/logo.png\"\r\n\r\n\r\nconst Header = () => {\r\n    return <header className={classes.header}>\r\n        <img src={logo} alt=\"\"/>\r\n    </header>\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport classes from \"./../Dialogs.module.scss\";\r\n\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n\r\n}\r\n\r\nexport const DialogItem = (props: PropsType) => {\r\n    let path = \"dialogs/\" + props.id;\r\n    return <div className={classes.dialog}>\r\n        <NavLink className={classes.link} to={path}>{props.name}</NavLink>\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nimport classes from './../Dialogs.module.scss';\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: PropsType) => {\r\n    return <div className={classes.message}>{props.message}</div>\r\n}","import React from \"react\";\r\n\r\n\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsType, MessagesType} from \"../../Redux/state\";\r\n\r\nimport classes from \"./Dialogs.module.scss\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\nconst Dialogs = (props: PropsType) => {\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n\r\n    let messagesElements = props.messages.map(m => <Message message={m.message}/>);\r\n\r\n    return <div className={classes.dialogs}>\r\n        <div className={classes.dialogsItem}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={classes.messages}>\r\n            {messagesElements}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return <div>News</div>\r\n}\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return <div>Music</div>\r\n}\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return <div>Settings</div>\r\n}\r\nexport default Settings;","import React from 'react';\r\n\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Dialogs from './components/Dialogs/Dialogs';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from './components/Settings/Settings';\r\n\r\nimport {Route} from 'react-router-dom';\r\nimport {StateType} from \"./Redux/state\";\r\n\r\nimport classes from './App.module.scss';\r\n\r\ntype PropsType = {\r\n    state: StateType\r\n    addPost: () => void\r\n    updateNewPostText: (newText: any) => void\r\n}\r\n\r\nconst App = (props: PropsType) => {\r\n    return (\r\n        <div className={classes.appWrapper}>\r\n            <Header/>\r\n            <Nav/>\r\n            <div className={classes.appWrapperContent}>\r\n                <Route path=\"/dialogs\" render={() => <Dialogs dialogs={props.state.dialogsPage.dialogs}\r\n                                                              messages={props.state.dialogsPage.messages}/>}/>\r\n                <Route path=\"/profile\" render={() => <Profile\r\n                                                              newPostText={props.state.profilePage.newPostText}\r\n                                                              updateNewPostText={props.updateNewPostText}\r\n                                                              posts={props.state.profilePage.posts}\r\n                                                              addPost={props.addPost}/>}\r\n                />\r\n                <Route path=\"/news\" component={News}/>\r\n                <Route path=\"/music\" component={Music}/>\r\n                <Route path=\"/settings\" component={Settings}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {rerenderEntireTree} from \"../Render\";\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n\r\n}\r\n\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\nlet state: StateType = {\r\n\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: 'Obito', likeCount: 10},\r\n            {id: 2, message: 'Pain', likeCount: 20}\r\n        ],\r\n        newPostText: \"Value1\"\r\n    },\r\n\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: 'Tobi'},\r\n            {id: 2, name: 'Pain'},\r\n            {id: 3, name: 'Conan'},\r\n            {id: 4, name: 'Itachi'},\r\n            {id: 5, name: 'Hidan'}\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Привет'},\r\n            {id: 2, message: 'Хай'},\r\n            {id: 3, message: 'Пока'},\r\n        ]\r\n    }\r\n\r\n}\r\n\r\nexport let addPost = () => {\r\n\r\n    let newPost = {\r\n        id: 5,\r\n        message: state.profilePage.newPostText,\r\n        likeCount: 12\r\n    };\r\n\r\n    state.profilePage.posts.push(newPost)\r\n    state.profilePage.newPostText = ''\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport let updateNewPostText = (newText: any) => {\r\n    state.profilePage.newPostText = newText;\r\n    rerenderEntireTree(state);\r\n}\r\n\r\n\r\nexport default state;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {addPost, updateNewPostText} from \"./Redux/state\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n\r\nexport let rerenderEntireTree = (state:any) => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <App state={state} addPost={addPost} updateNewPostText={updateNewPostText}/>\r\n        </BrowserRouter>,\r\n        document.getElementById('root'));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport {rerenderEntireTree} from \"./Render\";\r\nimport state from \"./Redux/state\";\r\n\r\n\r\n\r\nrerenderEntireTree(state);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}